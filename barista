#!/usr/bin/env perl

use strict;
use warnings;

use Data::Dumper;
use LWP::Simple;

my $REPOS_CONF = "etc/barista/repos.conf";

sub get_repos {
    my @repos;
    open( my $fd, "<", $REPOS_CONF ) or die "Can't open $REPOS_CONF";

    while ( my $line = <$fd> ) {
        chomp($line);
        if ( $line !~ /^#/ ) {
            my @tmp = split( / |\t/, $line );
            my $url = shift @tmp;
            while ( my $dir = shift @tmp ) {
                push( @repos, "$url$dir" );
            }
        }
    }
    close($fd);
    return @repos;
}

sub search_package {
    my ($pkgname) = @_;
    for my $repo ( get_repos() ) {
        if ( is_success( getstore( "$repo/PACKAGES", "/tmp/PACKAGES" ) ) ) {
            open( my $fd, "<", "/tmp/PACKAGES" );
            while (<$fd>) {
                if ( $_ =~ /$pkgname/ ) {
                    close($fd);
                    print "$pkgname found in $repo\n";
                    return $repo;
                }
            }
            close($fd);
        }
        else {
            print "error: $repo\n";
        }
    }
}

sub do_install {
    for (@ARGV) {
        search_package($_);
    }
}

sub do_remove {
    print Dumper(@ARGV);
}

sub do_update {
    print Dumper(@ARGV);
}

sub show_usage {
    my ($cmd) = @_;
    print "Usage: $0 command\n";
    print "       $0 install|remove pkg1 [pkg2 ...]\n";
    print "       $0 update [pkg1 ...]";

    $cmd eq "help" ? exit 0 : exit 1;
}

my $cmd = shift or die "Usage: $0 install|remove|update";

if ( $cmd eq "install" ) {
    do_install();
}
elsif ( $cmd eq "remove" ) {
    do_remove();
}
elsif ( $cmd eq "update" ) {
    do_update();
}
else {
    show_usage($cmd);
}
